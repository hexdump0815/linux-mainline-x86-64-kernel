# directories:
# - /compile/doc/stable-86 - the files in this dir
# - /compile/source/linux-stable-cbc - the kernel sources checked out from gitrepo
# - /compile/result/stable-86 - the resulting kernel, modules etc. tar.gz files
# - /compile/doc/kernel-config-options - https://github.com/hexdump0815/kernel-config-options
# name: stb-cbc

# patches: none yet

# required
apt-get -y install libelf-dev vboot-kernel-utils

# get and build the efi bootstub - required: apt-get install gnu-efi - replaced by alternative approach below
#git clone --depth 1 -b release-R91-13904.B https://chromium.googlesource.com/chromiumos/third_party/bootstub
#cd bootstub
#make PREFIX=""
#cd ..
# alternative approach
cd /compile/source
git clone https://gitlab.freedesktop.org/jbarnes/cros-util.git

cd /compile/source/linux-stable-cbc

#export ARCH=x86
# defconfig + kernel-config-options based config will follow later
#scripts/kconfig/merge_config.sh -m arch/arm64/configs/defconfig /compile/doc/kernel-config-options/chromebooks-x86_64.cfg /compile/doc/kernel-config-options/docker-options.cfg /compile/doc/kernel-config-options/options-to-remove-generic.cfg /compile/doc/stable-86/misc.cbc/options/options-to-remove-special.cfg /compile/doc/kernel-config-options/additional-options-generic.cfg /compile/doc/stable-86/misc.cbc/options/additional-options-special.cfg
#( cd /compile/doc/kernel-config-options ; git rev-parse --verify HEAD ) > /compile/doc/stable/misc.cbq/options/kernel-config-options.version
# lets use a cros config based with some required adjustments as a starting point
cp /compile/doc/stable-86/misc.cbc/misc/config-rabbid-cros-olddefconfig-adjusted .config
make olddefconfig
make -j 4 bzImage modules
cd tools/perf
make
cd ../power/cpupower
make
cd ../../..
export kver=`make kernelrelease`
echo ${kver}
# remove debug info if there and wanted
# find . -type f -name '*.ko' | sudo xargs -n 1 objcopy --strip-unneeded
make modules_install
mkdir -p /lib/modules/${kver}/tools
cp -v tools/perf/perf /lib/modules/${kver}/tools
cp -v tools/power/cpupower/cpupower /lib/modules/${kver}/tools
cp -v tools/power/cpupower/libcpupower.so.0.0.1 /lib/modules/${kver}/tools/libcpupower.so.0
# make headers_install INSTALL_HDR_PATH=/usr
cp -v .config /boot/config-${kver}
cp -v arch/x86/boot/bzImage /boot/vmlinuz-${kver}
cp -v System.map /boot/System.map-${kver}
# start chromebook special - required: apt-get install liblz4-tool vboot-kernel-utils
cp arch/x86_64/boot/bzImage bzImage
cp /compile/doc/stable-86/misc.cbc/misc/cmdline cmdline
# for console via usb srial adapter - see: https://github.com/Sonicadvance1/linux/issues/27#issuecomment-823668871
# cp /compile/doc/stable-86/misc.cbc/misc/cmdline.usb cmdline
# old approach
# cp -v bootstub/bootstub.efi bootstub.efi
cp -v ../cros-util/bootstub.efi bootstub.efi
vbutil_kernel --pack vmlinux.kpart --keyblock /usr/share/vboot/devkeys/kernel.keyblock --signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk --version 1 --config cmdline --bootloader /compile/source/cros-util/bootstub.efi --vmlinuz bzImage --arch x86_64
cp -v vmlinux.kpart /boot/vmlinux.kpart-${kver}
rm -f bzImage cmdline kernel.itb vmlinux.kpart
# end chromebook special
cd /boot
update-initramfs -c -k ${kver}
tar cvzf /compile/source/linux-stable-cbc/${kver}.tar.gz /boot/*-${kver} /lib/modules/${kver}
cp -v /compile/doc/stable-86/config.cbc /compile/doc/stable-86/config.cbc.old
cp -v /compile/source/linux-stable-cbc/.config /compile/doc/stable-86/config.cbc
cp -v /compile/source/linux-stable-cbc/.config /compile/doc/stable-86/config.cbc-${kver}
cp -v /compile/source/linux-stable-cbc/*.tar.gz /compile/result/stable-86

# alternative: make -j 4 deb-pkg - results in /usr/src
#
# IMPORTANT: after unpacking the result file on the target machine, do a "cd /boot ; update-initramfs -c -k ${kver}" there
